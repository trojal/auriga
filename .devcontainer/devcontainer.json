{
	"name": "JitanRO development environment",

	"dockerComposeFile": "docker-compose.yml",

	"service": "devcontainer",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",

	"runArgs": ["--init"],

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"sqltools.connections": [{
			"name": "JitanRO development database",
			"driver": "MariaDB",
			"server": "localhost",
			"previewLimit": 50,
			"port": 3306,
			"database": "ragnarok",
			"username": "ragnarok",
			"password": "ragnarok"
		}]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"mtxr.sqltools",
		"mtxr.sqltools-driver-mysql",
		"ms-azuretools.vscode-docker"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "tools/ci/travis.sh importdb ragnarok ragnarok ragnarok 127.0.0.1",

	// Use 'postStartCommand' to run commands when the container is started.
	"postStartCommand": "doctl auth init --access-token $DO_TOKEN && doctl kubernetes cluster kubeconfig save e15266d8-76a6-4aa1-9529-5df961097936 && doctl registry login",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "devuser",

	"overrideCommand": false,

	"remoteEnv": { 
		"DO_TOKEN": "${localEnv:DEVCONTAINER_DO_TOKEN}",
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	}
}
